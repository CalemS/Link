// Generated by CoffeeScript 1.6.3
(function() {
  var LinkSequenceBuilder, LinkSequenceDecoder, readline, rl;

  readline = require("readline");

  LinkSequenceBuilder = require("./link").LinkSequenceBuilder;

  LinkSequenceDecoder = require("./link").LinkSequenceDecoder;

  rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });

  rl.question("Payload: ", function(magnet) {
    return rl.question("Name: ", function(name) {
      return rl.question("Keywords: ", function(keywords) {
        var addresses, decoder, error, errors, sequence, x, _i, _len;
        sequence = new LinkSequenceBuilder();
        sequence.addPayloadInline(magnet);
        sequence.addName(name);
        sequence.addKeywords(keywords);
        sequence.addPayloadMD5(magnet);
        sequence.addPayloadSHA1(magnet);
        sequence.addPayloadSHA256(magnet);
        sequence.addOriginalCreationDate(new Date());
        sequence.addLastModifiedDate(new Date());
        addresses = sequence.getAddresses(14);
        for (x in addresses) {
          console.log(addresses[x]);
        }
        decoder = new LinkSequenceDecoder(addresses);
        errors = decoder.verify();
        if (errors.length > 0) {
          for (_i = 0, _len = errors.length; _i < _len; _i++) {
            error = errors[_i];
            console.log(error);
          }
        }
        console.log(decoder.payloadInline);
        console.log(decoder.name);
        console.log(decoder.keywords);
        console.log(decoder.originalCreationDate);
        console.log(decoder.lastModifiedDate);
        return rl.close();
      });
    });
  });

}).call(this);
